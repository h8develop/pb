This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2024-11-18T13:48:46.985Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
.gitignore
app.js
Dockerfile
energyUpdate.js
Makefile
package.json
supabase.js

================================================================
Repository Files
================================================================

================
File: .gitignore
================
node_modules

================
File: app.js
================
import { Telegraf, Markup } from 'telegraf'

const token = '8124471087:AAGp_FGoAR3D-jMtzpGKlEG_DDNGz4Y69vo'
const webAppUrl = 'https://pbprojeck-87266.web.app'

const bot = new Telegraf(token)

bot.command('start', (ctx) => {
  ctx.reply(
    'Hello! Press to start the app',
    Markup.inlineKeyboard([
      Markup.button.webApp('Open mini app', `${webAppUrl}?ref=${ctx.payload}`),
    ])
  )
})

bot.launch()

================
File: Dockerfile
================
FROM node:16-alpine
WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .  
ENV PORT=3000
EXPOSE $PORT
CMD ["npm", "start"]

================
File: energyUpdate.js
================
import cron from 'node-cron';
import supabase from './supabase.js';

console.log(`[${new Date().toISOString()}] Запуск скрипта восстановления энергии`);

cron.schedule('* * * * *', async () => {
  console.log(`[${new Date().toISOString()}] Выполнение запланированной задачи`);
  try {
    const { data: users, error } = await supabase
      .from('users')
      .select('id, energy, max_energy');

    if (error) {
      console.error('Ошибка при получении пользователей:', error);
      return;
    }

    const updatePromises = users.map(user => {
      const newEnergy = Math.min(user.energy + 1, user.max_energy);

      console.log(`Пользователь ID ${user.id}: энергия была ${user.energy}, стала ${newEnergy}`);

      return supabase
        .from('users')
        .update({
          energy: newEnergy,
          last_energy_update: new Date().toISOString(),
        })
        .eq('id', user.id);
    });

    await Promise.all(updatePromises);

    console.log('Энергия пользователей успешно обновлена');
  } catch (err) {
    console.error('Ошибка в запланированной задаче:', err);
  }
});

================
File: Makefile
================
build-tgbot:
	docker build -t tgbot .

run-tgbot:
	docker run -d -p 3000:3000 --name tgbot --rm tgbot

================
File: package.json
================
{
  "name": "bot",
  "version": "1.0.0",
  "main": "app.js",
  "type": "module",
  "scripts": {
   "start": "concurrently \"node app.js\" \"node energyUpdate.js\""

  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "dependencies": {
    "concurrently": "^9.1.0",
    "telegraf": "^4.16.3",
    "express": "^4.18.2", 
    "@supabase/supabase-js": "^2.0.0", 
    "node-cron": "^3.0.0" 
  }
}

================
File: supabase.js
================
import { createClient } from '@supabase/supabase-js';


const SUPABASE_URL = 'https://irymwiidzovsezjnbiux.supabase.co'
const SUPABASE_API_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlyeW13aWlkem92c2V6am5iaXV4Iiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTczMTE1ODkzMCwiZXhwIjoyMDQ2NzM0OTMwfQ.ZbWuQrnVvrhpXCqKt-kYYrpsNiDGkDEn1WSiXaQ8Dpg'

if (!SUPABASE_URL || !SUPABASE_API_KEY) {
  throw new Error('SUPABASE_URL и SUPABASE_API_KEY обязательны.');
}

const supabase = createClient(SUPABASE_URL, SUPABASE_API_KEY);
export default supabase;
